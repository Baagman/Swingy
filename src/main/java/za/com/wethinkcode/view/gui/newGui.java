package za.com.wethinkcode.view.gui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import lombok.Getter;
import lombok.Setter;
import za.com.wethinkcode.contoller.Controller;
import za.com.wethinkcode.model.util.Database;

/**
 *
 * @author tbaagman
 */

@Getter
@Setter
public class newGui extends javax.swing.JFrame {
    
    private Controller controller;
    /**
     * Creates new form newGui
     * @param database
     */
    public newGui(Database database) {
        initComponents();
        this.controller = new Controller(database);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPanel = new javax.swing.JPanel();
        btnContainer = new javax.swing.JPanel();
        selectExsitingHero = new javax.swing.JButton();
        createNewHeroBtn = new javax.swing.JButton();
        exitGame = new javax.swing.JButton();
        availableHeroPanel = new javax.swing.JPanel();
        heroNames = new javax.swing.JComboBox<String>();
        statsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectExsitingHero.setText("Select Exsiting Hero");
        selectExsitingHero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectExsitingHeroActionPerformed(evt);
            }
        });

        createNewHeroBtn.setText("Create New Hero");
        createNewHeroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewHeroBtnActionPerformed(evt);
            }
        });

        exitGame.setText("Exit Game");
        exitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitGameActionPerformed(evt);
            }
        });

        availableHeroPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                availableHeroPanelComponentShown(evt);
            }
        });

        heroNames.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                heroNamesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout statsPanelLayout = new javax.swing.GroupLayout(statsPanel);
        statsPanel.setLayout(statsPanelLayout);
        statsPanelLayout.setHorizontalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        statsPanelLayout.setVerticalGroup(
            statsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 334, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout availableHeroPanelLayout = new javax.swing.GroupLayout(availableHeroPanel);
        availableHeroPanel.setLayout(availableHeroPanelLayout);
        availableHeroPanelLayout.setHorizontalGroup(
            availableHeroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availableHeroPanelLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(heroNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
            .addComponent(statsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        availableHeroPanelLayout.setVerticalGroup(
            availableHeroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availableHeroPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(heroNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout btnContainerLayout = new javax.swing.GroupLayout(btnContainer);
        btnContainer.setLayout(btnContainerLayout);
        btnContainerLayout.setHorizontalGroup(
            btnContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnContainerLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(btnContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createNewHeroBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectExsitingHero)
                    .addComponent(exitGame, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(availableHeroPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnContainerLayout.setVerticalGroup(
            btnContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnContainerLayout.createSequentialGroup()
                .addGroup(btnContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(availableHeroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(btnContainerLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(selectExsitingHero, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(createNewHeroBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exitGame, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        availableHeroPanel.setVisible(false);

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitGameActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitGameActionPerformed

    private void createNewHeroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewHeroBtnActionPerformed
        // TODO add your handling code here:
//        if (createNewHeroBtn.isVisible()) {
//            createNewHeroBtn.setVisible(false);
//        }
    }//GEN-LAST:event_createNewHeroBtnActionPerformed

    private void selectExsitingHeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectExsitingHeroActionPerformed
        // TODO add your handling code here:
//        if (createNewHeroBtn.isVisible()) {
//            createNewHeroBtn.setVisible(false);
//        }
        availableHeroPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_selectExsitingHeroActionPerformed

    private void availableHeroPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_availableHeroPanelComponentShown
        // TODO add your handling code here:
        
        final ResultSet heroesAvailableFromDatabase;
	ArrayList<String> heroesAvailable = new ArrayList<>();
        
        try {
            heroesAvailableFromDatabase = controller.getAvailableHeroes();
            while (heroesAvailableFromDatabase.next()) {
		heroesAvailable.add(heroesAvailableFromDatabase.getString("name"));
            }
	} catch (SQLException e) {
            e.printStackTrace();
	}
	if (!heroesAvailable.isEmpty()) {
            for (String heroName : heroesAvailable) {
                heroNames.addItem(heroName);
            }
        }
    }//GEN-LAST:event_availableHeroPanelComponentShown

    private void heroNamesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_heroNamesItemStateChanged
        // TODO add your handling code here:
        System.out.println(evt.getItem().toString());
    }//GEN-LAST:event_heroNamesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel availableHeroPanel;
    private javax.swing.JPanel btnContainer;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JButton createNewHeroBtn;
    private javax.swing.JButton exitGame;
    private javax.swing.JComboBox<String> heroNames;
    private javax.swing.JButton selectExsitingHero;
    private javax.swing.JPanel statsPanel;
    // End of variables declaration//GEN-END:variables
}
